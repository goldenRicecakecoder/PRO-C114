# -*- coding: utf-8 -*-
"""Project 114 : TEXT PRE-PROCESSING

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z7KB8S06ATlRg9Jqi6k_M1mEkphNMqKQ
"""

# Load the dataset from Github repositoy

# Make a dataframe using the 'pandas' module
import pandas as pd
dataframe = pd.read_excel('/content/product_dataset/updated_product_dataset.xlsx')
#print(dataframe.head())
dataframe.head()

dataframe["Emotion"].unique()

encode_product={"Positive":0,"Neutral":1,"Negative":2}



dataframe.replace(encode_product,inplace=True)

dataframe.head()

training_sentences=[]
training_labels = []
# append text and emotions in the list using the 'loc' method
for i in range(len(dataframe)):
  sentence = dataframe.loc[i,"Text"]
  training_sentences.append(sentence)
  label = dataframe.loc[i,"Emotion"]
  training_labels.append(label)
#Check a random text and label of the list
training_sentences[50],training_labels[50]

import tensorflow as tf
from tensorflow.keras.preprocessing.text import Tokenizer
#Define parameters for Tokenizer
vocab_size=10000
embedding_dim = 16
oov_tok = "<OOV>"
training_size = 20000
tokenizer=Tokenizer(num_words=vocab_size,oov_token=oov_tok)
tokenizer.fit_on_texts(training_sentences)
#Create a word_index dictionary
word_index = tokenizer.word_index
#Check the tokenized sequence
word_index["wrong"]

training_sequences = tokenizer.texts_to_sequences(training_sentences)
print(training_sequences[0])
print(training_sequences[1])
print(training_sequences[2])

from tensorflow.keras.preprocessing.sequence import pad_sequences

#Define parameters for pad_sequences
padding_type = 'post'
max_length = 100
trunc_type='post'
training_padded = pad_sequences(training_sequences,maxlen=max_length, padding=padding_type,truncating=trunc_type)

#Check the padded sequence
training_padded
print(training_padded[0:3])

class Employee:
  def __init__(self,name,Empid):
    self.name=name
    self.Empid=Empid
    print(self.Empid)
std=Employee("Jhon",1)
std.Empid=2

from tensorflow.keras.preprocessing.sequence import pad_sequences

#Define parameters for pad_sequences
padding_type = 'post'
max_length = 100
trunc_type='post'
dataframe = pad_sequences(training_sequences,maxlen=max_length, padding=padding_type,truncating=trunc_type)

#Check the padded sequence
dataframe
print(dataframe[0:3])